// ===========================================================================
// MIXINS
// ===========================================================================

// Prints a media query based on given values for minimum
// and maximum widths.
@mixin wb-media($min-value: null, $max-value: null) {
  // No lower limit.
  @if $min-value == null and $max-value != null {
    @media screen and (max-width: $max-value - 1) { @content; }
  }
  // No upper limit.
  @else if $min-value != null and $max-value == null {
    @media screen and (min-width: $min-value) { @content; }
  }
  // Lower and upper limits are provided.
  @else if $min-value != null and $max-value != null {
    @media screen and (min-width: $min-value) and (max-width: $max-value - 1) { @content; }
  }
  // Lower and upper limits are not provided, there is no need to print a media query.
  @else {
    @content;
  }
}

// Prints the provided styles specifically and only for
// the given breakpoint.
@mixin wb-media-only($breakpoint) {
  $min-value: map-get($wb-breakpoints, $breakpoint);
  $max-value: wb-breakpoint-upper-limit($breakpoint);

  @include wb-media($min-value, $max-value) {
    @content;
  }
}

// Prints the provided styles for the given breakpoint
// and larger breakpoints.
@mixin wb-media-and-larger($breakpoint) {
  $min-value: map-get($wb-breakpoints, $breakpoint);

  @include wb-media($min-value, null) {
    @content;
  }
}

// Prints the provided styles for the given breakpoint
// and smaller breakpoints.
@mixin wb-media-and-smaller($breakpoint) {
  $max-value: wb-breakpoint-upper-limit($breakpoint);

  @include wb-media(null, $max-value) {
    @content;
  }
}

// Prints the provided styles through the given breakpoints.
@mixin wb-media-through($breakpoint-a, $breakpoint-b) {
  $min-value: map-get($wb-breakpoints, $breakpoint-a);
  $max-value: wb-breakpoint-upper-limit($breakpoint-b);

  @include wb-media($min-value, $max-value) {
    @content;
  }
}

// Iterates over the breakpoints stack ($wb-breakpoints)
// and sets 3 global variables which may be used when
// writing responsive styles.
@mixin wb-make-responsive() {
  // For each breakpoint, set 3 global variables before
  // printing the to-be-responsive styles.
  @each $breakpoint-name, $breakpoint-value in $wb-breakpoints {
    $wb-breakpoint: #{$breakpoint-name} !global;
    $wb-breakpoint-prefix: '#{$breakpoint-name}-' !global;
    $wb-breakpoint-suffix: '-#{$breakpoint-name}' !global;

    // responsive styles should follow the mobile-first approach
    @include wb-media-and-larger($breakpoint-name) {
      @content;
    }
  }

  // Clear global variables.
  $wb-breakpoint: null !global;
  $wb-breakpoint-prefix: null !global;
  $wb-breakpoint-suffix: null !global;
}
